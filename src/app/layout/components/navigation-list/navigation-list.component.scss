/* stylelint-disable no-descending-specificity */
/* stylelint-disable selector-class-pattern */

@use '@angular/material' as mat;

.mat-mdc-list-item-title {
  transition: font-weight 400ms cubic-bezier(0.05, 0.7, 0.1, 1);
}

:host-context(.mat-drawer-opened) {
  .mat-mdc-list-item-title {
    animation: 280ms cubic-bezier(0, 0, 0.2, 1) 120ms both fade-in;
    transition: font-weight 2000ms cubic-bezier(0.05, 0.7, 0.1, 1);
  }
}

:host-context(.mat-drawer.ng-animating, .mat-drawer-opened) {
  .mat-mdc-nav-list {
    padding: 0 0.75rem;
  }

  .mat-mdc-list-item {
    height: 3.5rem;

    .mat-icon {
      margin-right: 1rem;
    }
  }

  .mat-divider {
    margin: 0 1rem;
  }

  .mdc-list-item.mdc-list-item::before {
    height: 100%;
    width: 100%;
    border-radius: 1rem;
    left: 0;
    transform: none;
    transition:
      width 200ms cubic-bezier(0.05, 0.7, 0.1, 1),
      height 200ms cubic-bezier(0.05, 0.7, 0.1, 1);
  }

  .title-lite {
    display: none;
  }
}

:host-context(.navigation-bar .bottom),
:host-context(.navigation-rail .mat-drawer:not(.mat-drawer-opened)) {
  width: 100%;

  .mat-mdc-nav-list {
    transition: margin 400ms cubic-bezier(0.05, 0.7, 0.1, 1);
    padding: 0.75rem 0 1rem;
    display: flex;
    gap: 0.75rem;

    @include mat.list-overrides(
      (
        list-item-one-line-container-height: auto,
      )
    );

    .mat-mdc-list-item-title {
      opacity: 1;
    }

    .mat-mdc-list-item {
      flex-direction: column;
      padding: 0;
      gap: 0.25rem;

      .mat-icon {
        position: relative;
        height: 2rem;
        line-height: 2rem;
      }

      &::before {
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        transition:
          opacity 100ms cubic-bezier(0.3, 0, 0.8, 0.15) 0ms,
          width 400ms cubic-bezier(0.3, 0, 0.8, 0.15) 50ms;
        width: 0;
        height: 2rem;
        border-radius: 1rem;
        transition-duration: 200ms;
        position: absolute;
        content: '';
        opacity: 0;
        pointer-events: none;
      }

      &.mdc-list-item--activated {
        background-color: transparent;

        &::before {
          background-color: var(--mat-list-active-indicator-color);
          width: 3.5rem;
          opacity: 1 !important;
        }
      }

      &:focus::before {
        background-color: var(--mdc-list-list-item-focus-state-layer-color);
        opacity: var(--mdc-list-list-item-focus-state-layer-opacity) !important;
        transform: translateX(-50%);
        width: 3.5rem;
      }
    }
  }

  .title-full {
    display: none;
  }
}

:host-context(.navigation-rail .mat-drawer:not(.mat-drawer-opened)) {
  .mat-mdc-nav-list {
    flex-direction: column;
    gap: 0.75rem;
    max-width: 5rem;
    padding: 0;

    @include mat.list-overrides(
      (
        list-item-one-line-container-height: 56px,
      )
    );

    .mat-divider {
      display: none;
    }
  }
}

:host-context(.navigation-rail .mat-drawer:not(.mat-drawer-opened).ng-animating) {
  .title-lite {
    display: block;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
