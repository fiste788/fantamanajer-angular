/* stylelint-disable selector-class-pattern */
@use 'sass:map';
@use 'sass:string';
@use '@angular/material' as mat;

@mixin base($theme) {
  body {
    margin: 0;
    height: 100%;
  }

  figure {
    margin: 0;
  }

  fieldset {
    margin: 0;
    padding: 0;
    border: 0;
  }

  .sticky {
    transition: top 0.2s ease-in;
  }

  .spacer {
    flex: 1 1 auto;
  }

  .mat-mdc-progress-spinner {
    margin: 3rem auto 5rem;
  }

  a {
    text-decoration: none;
  }

  .red-card,
  .yellow-card {
    width: 0.75rem;
    height: 1rem;
    border-radius: 3px;
    display: inline-block;

    @include mat.elevation(1);
  }

  .yellow-card {
    background-color: yellow;
  }

  .red-card {
    background-color: red;
  }

  content-loader svg {
    max-height: 100%;
  }

  .cdk-virtual-scroll-content-wrapper {
    width: 100%;
    overflow: hidden;
  }

  .placeholder {
    display: flex;
    height: 100%;
    align-items: center;
    justify-content: center;
  }
}

@mixin color($theme) {
  .mat-text-accent {
    color: mat.get-theme-color($theme, tertiary);
  }

  .mat-text-primary {
    color: mat.get-theme-color($theme, primary);
  }

  ::selection {
    background: mat.get-theme-color($theme, tertiary);
    color: mat.get-theme-color($theme, on-tertiary);
  }

  .placeholder {
    background-color: mat.get-theme-color($theme, surface-container-low);
    color: mat.get-theme-color($theme, on-surface);
  }

  img[src*='.svg'] {
    background-color: mat.get-theme-color($theme, surface-container-low);
  }

  a {
    color: mat.get-theme-color($theme, on-primary-container);
  }

  .cdk-virtual-scroll-viewport {
    --mat-skeleton-background-color: #{mat.get-theme-color($theme, secondary-fixed-dim)};
    --mat-skeleton-foreground-color: #{mat.get-theme-color($theme, secondary-fixed)};
  }

  @media (prefers-color-scheme: dark) {
    .greyscale,
    img {
      filter: grayscale(60%);
    }
  }
}

@mixin density($theme) {
}

@mixin typography($theme) {
  body {
    font-family: string.unquote(mat.get-theme-typography($theme, body-medium, font-family));
  }

  .placeholder {
    font-size: 2rem;
  }
}

@mixin theme($theme) {
  @include mat.private-check-duplicate-theme-styles($theme, 'styles') {
    @include base($theme);
    @include color($theme);
    @include density($theme);
    @include typography($theme);
  }
}
