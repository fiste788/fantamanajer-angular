/* stylelint-disable selector-class-pattern */
@use 'sass:map';
@use '@angular/material' as mat;

@mixin base($theme) {
  body {
    margin: 0;
    height: 100%;
    font-family: 'Exo 2', sans-serif;
  }

  figure {
    margin: 0;
  }

  fieldset {
    margin: 0;
    padding: 0;
    border: 0;
  }

  .sticky {
    transition: top 0.2s ease-in;
  }

  .tabbed-container {
    min-height: calc(100vh - 25rem);

    @media (max-width: theme('screens.sm')) {
      margin-left: 1rem;
      margin-right: 1rem;

      .mat-mdc-card {
        margin-left: 0;
        margin-right: 0;
      }
    }
  }

  .mat-drawer .mat-toolbar {
    background-color: inherit;
  }

  .spacer {
    flex: 1 1 auto;
  }

  .mat-mdc-progress-spinner {
    margin: 3rem auto 5rem;
  }

  .mat-mdc-option .mdc-list-item__primary-text {
    white-space: nowrap;
  }

  a {
    text-decoration: none;
  }

  .red-card,
  .yellow-card {
    width: 0.75rem;
    height: 1rem;
    display: inline-block;

    @include mat.elevation(1);
  }

  .yellow-card {
    background-color: yellow;
  }

  .red-card {
    background-color: red;
  }

  app-main:not(:empty) + .pre-bootstrap {
    background-color: transparent;
    animation: leave-animation 0.2s ease-in-out forwards;
  }

  content-loader svg {
    max-height: 100%;
  }

  .cdk-virtual-scroll-content-wrapper {
    width: 100%;
    overflow: hidden;
  }

  .placeholder {
    font-size: 2rem;
    display: flex;
    height: 100%;
    align-items: center;
    justify-content: center;
  }

  @keyframes leave-animation {
    0% {
      opacity: 1;
    }

    100% {
      opacity: 0;
      transform: scale(0);
      display: none;
    }
  }
}

@mixin color($theme) {
  .mat-drawer-over {
    --mat-sidenav-container-background-color: #{mat.get-theme-color($theme, surface-container-low)};
  }

  .mat-text-accent {
    color: mat.get-theme-color($theme, tertiary);
  }

  .mat-text-primary {
    color: mat.get-theme-color($theme, primary);
  }

  ::selection {
    background: mat.get-theme-color($theme, tertiary);
    color: mat.get-theme-color($theme, on-tertiary);
  }

  .placeholder {
    background-color: mat.get-theme-color($theme, surface-container-low);
    color: mat.get-theme-color($theme, on-surface);
  }

  img[src~='.svg'] {
    background-color: mat.get-theme-color($theme, surface-container-low);
  }

  a {
    color: mat.get-theme-color($theme, on-primary-container);
  }

  --mat-skeleton-background-color: #{mat.get-theme-color($theme, secondary-fixed)};
  --mat-skeleton-foregrounf-color: #{mat.get-theme-color($theme, secondary-fixed-dim)};
}

@mixin density($theme) {
}

@mixin typography($theme) {
}

@mixin theme($theme) {
  @include mat.private-check-duplicate-theme-styles($theme, 'styles') {
    @include base($theme);
    @include color($theme);
    @include density($theme);
    @include typography($theme);
  }
}
