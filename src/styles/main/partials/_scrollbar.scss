/* stylelint-disable selector-class-pattern */
@use 'sass:map';
@use '@angular/material' as mat;

@mixin core() {
}

@mixin color($theme) {
  $accent: map.get($theme, accent);

  /* Variables */
  :root {
    --scrollbar-size: 0.375rem;
    --scrollbar-minlength: 1.5rem;

    /* Minimum length of scrollbar thumb (width of horizontal, height of vertical) */
    --scrollbar-ff-width: thin;

    /* FF-only accepts auto, thin, none */
    --scrollbar-track-color: transparent;
    --scrollbar-color: rgb(0 0 0 / 20%);
    --scrollbar-color-hover: rgb(0 0 0 / 30%);
    --scrollbar-color-active: #{mat.get-color-from-palette($accent, 0.66)};
  }

  /* Use .layout-scrollbar-obtrusive to only use overflow if scrollbars donâ€™t overlay */

  .mat-mdc-select-panel,
  .mat-sidenav > div,
  .mat-sidenav-content,
  .scrollbar-test {
    overscroll-behavior: contain;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    scrollbar-width: var(--scrollbar-ff-width);
  }

  /* This class controls what elements have the new fancy scrollbar CSS */

  .mat-mdc-select-panel,
  .mat-sidenav > div,
  .mat-sidenav-content {
    scrollbar-color: var(--scrollbar-color) var(--scrollbar-track-color);
    overflow-y: overlay !important;
  }

  ::-webkit-scrollbar-track {
    background-color: var(--scrollbar-track-color);
  }

  ::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-color);
    border-radius: 3px;

    &:hover {
      background-color: var(--scrollbar-color-hover);
    }

    &:active {
      background-color: var(--scrollbar-color-active);
    }

    /* stylelint-disable-next-line selector-pseudo-class-no-unknown */
    &:vertical {
      min-height: var(--scrollbar-minlength);
    }
  }

  /* Only apply height/width to ::-webkit-scrollbar if is obtrusive */

  ::-webkit-scrollbar {
    height: var(--scrollbar-size);
    width: var(--scrollbar-size);
  }

  ::-webkit-scrollbar-thumb:vertical,
  ::-webkit-scrollbar-thumb:horizontal {
    min-height: var(--scrollbar-minlength);
  }
}

@mixin density($theme) {
}

@mixin typography($theme) {
}

@mixin theme($theme) {
  @include core;

  @include mat.private-check-duplicate-theme-styles($theme, 'scrollbar') {
    $color: mat.get-color-config($theme);
    $density: mat.get-density-config($theme);
    $typography: mat.get-typography-config($theme);

    @if $color {
      @include color($color);
    }

    @if $density {
      @include density($density);
    }

    @if $typography {
      @include typography($typography);
    }
  }
}
